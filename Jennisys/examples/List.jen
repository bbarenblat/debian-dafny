class List[T] {
  var list: seq[T]

  constructor Init() 
    ensures list = []

  constructor Singleton(t)
    ensures list = [t]
}

model List[T] {
  var root: Node[T]

  frame
    root * root.list[*]

  invariant
    (root = null) ==> (|list| = 0)
    root != null ==> list = root.list
}

class Node[T] {
  var list: seq[T]

  invariant
    |list| > 0

  constructor Init(t)
    ensures list = [t]
}

model Node[T] {
  var data: T
  var next: Node[T]

  frame 
    data * next

  invariant
    next = null ==> list = [data]
    next != null ==> list = [data] + next.list
} 
