
-------------------- Simple.dfy --------------------
// synthetic program

class MyClass<T, U> {
  var x: int;

  method M(s: bool, lotsaObjects: set<object>)
      returns (t: object, u: set<int>, v: seq<MyClass<bool,U>>):
    requires s;
    modifies this;
    modifies lotsaObjects;
    ensures t == t;
    ensures old(null) != this;
  {
    x := 12;
    while (x < 100)
      invariant x <= 100;
    {
      x := x + 17;
      if (x % 20 == 3) {
        x := this.x + 1;
      } else {
        this.x := x + 0;
      }
      call t, u, v := M(true, lotsaObjects)
      var to: MyClass<T,U>;
      call to, u, v := M(true, lotsaObjects)
      call to, u, v := to.M(true, lotsaObjects)
      assert v[x] != null ==> null !in v[2 .. x][1..][5 := v[this.x]][..10];
    }
  }
}

datatype List<T> {
  Nil;
  Cons(T, List<T>);
}

datatype WildData {
  Something;
  JustAboutAnything<G, H>(G, myName: set<H>, int, WildData);
  More(List<int>);
}

datatype Nothing { }

class C {
  var w: WildData;
  var list: List<bool>;
}

Dafny program verifier finished with 0 verified, 0 errors

-------------------- BQueue.bpl --------------------

Boogie program verifier finished with 8 verified, 0 errors

-------------------- SmallTests.dfy --------------------
SmallTests.dfy(29,7): Error: RHS expression must be well defined
Execution trace:
    (0,0): anon0

Dafny program verifier finished with 4 verified, 1 error

-------------------- Queue.dfy --------------------

Dafny program verifier finished with 12 verified, 0 errors

-------------------- ListCopy.dfy --------------------

Dafny program verifier finished with 2 verified, 0 errors

-------------------- BinaryTree.dfy --------------------

Dafny program verifier finished with 13 verified, 0 errors

-------------------- ListReverse.dfy --------------------

Dafny program verifier finished with 1 verified, 0 errors

-------------------- ListContents.dfy --------------------

Dafny program verifier finished with 5 verified, 0 errors

-------------------- SchorrWaite.dfy --------------------

Dafny program verifier finished with 4 verified, 0 errors

-------------------- Termination.dfy --------------------

Dafny program verifier finished with 5 verified, 0 errors

-------------------- Use.dfy --------------------
Use.dfy(12,5): Error BP5001: This assertion might not hold.
Execution trace:
    (0,0): anon0
Use.dfy(25,5): Error BP5001: This assertion might not hold.
Execution trace:
    (0,0): anon0
Use.dfy(50,5): Error BP5001: This assertion might not hold.
Execution trace:
    (0,0): anon0

Dafny program verifier finished with 6 verified, 3 errors

-------------------- DTypes.dfy --------------------
DTypes.dfy(15,5): Error BP5001: This assertion might not hold.
Execution trace:
    (0,0): anon0
DTypes.dfy(28,5): Error BP5001: This assertion might not hold.
Execution trace:
    (0,0): anon0
DTypes.dfy(54,5): Error BP5001: This assertion might not hold.
Execution trace:
    (0,0): anon0

Dafny program verifier finished with 5 verified, 3 errors

-------------------- TypeParameters.dfy --------------------
TypeParameters.dfy(41,5): Error BP5001: This assertion might not hold.
Execution trace:
    (0,0): anon0
TypeParameters.dfy(63,5): Error BP5001: This assertion might not hold.
Execution trace:
    (0,0): anon0

Dafny program verifier finished with 7 verified, 2 errors
